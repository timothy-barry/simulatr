[{"path":"katsevich-lab.github.io/simulatr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 simulatr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"katsevich-lab.github.io/simulatr/articles/example-local.html","id":"assemble-simulation-components","dir":"Articles","previous_headings":"","what":"1. Assemble simulation components","title":"simulatr on your laptop","text":"parameter_grid. problem parameters sample size n, dimension p, number nonzero coefficients s, value nonzero coefficient beta_val. simulation, vary n. therefore put remainder parameters fixed_parameters, avoid problem parameters parameter_grid. Next, want create ground truth inferential targets based problem parameters. case, inferential target coefficient vector. define function get_ground_truth() takes input three problem parameters outputs coefficient vector: can append ground truth inferential targets parameter_grid using helper function add_ground_truth(): Let’s take look resulting parameter grid: see four columns problem parameters fifth ground truth coefficient vectors. fixed_parameters. put number data realizations B seed set simulation. generate_data_function. define data-generation function follows: Note extract coefficient vector beta ground_truth object. Additionally, need call simulatr_function() add pieces information simulatr needs. particular, give argument names data-generating function (typically obtained using formalArgs(generate_data_f), ). also let simulatr know whether data-generating function creates just one realization data (loop = TRUE) B time (loop = FALSE). run_method_functions. Let’s define functions OLS lasso: , need call simulatr_function() add pieces information simulatr needs. time, need give arguments method functions except first (data ), usually empty. also let simulatr know whether method functions input just one realization data (loop = TRUE) B time (loop = FALSE). Finally, collate method functions named list. crucial list named. evaluation_functions. Let’s evaluate estimate beta using RMSE. accomplish , define following evaluation function:","code":"parameter_grid <- data.frame(   n = c(25, 50, 75, 100),      # sample size   p = 15,                      # dimension   s = 5,                       # number of nonzero coefficients   beta_val = 3                 # value of nonzero coefficients ) get_ground_truth <- function(p, s, beta_val){   beta <- numeric(p)   beta[1:s] <- beta_val   list(beta = beta) } parameter_grid <- parameter_grid |> add_ground_truth(get_ground_truth) parameter_grid #> # A tibble: 4 × 5 #>       n     p     s beta_val ground_truth     #>   <dbl> <dbl> <dbl>    <dbl> <list>           #> 1    25    15     5        3 <named list [1]> #> 2    50    15     5        3 <named list [1]> #> 3    75    15     5        3 <named list [1]> #> 4   100    15     5        3 <named list [1]> fixed_parameters <- list(   B = 20,                      # number of data realizations   seed = 4                    # seed to set prior to generating data and running methods ) # define data-generating model based on the Gaussian linear model generate_data_f <- function(n, p, ground_truth){   X <- matrix(rnorm(n*p), n, p, dimnames = list(NULL, paste0(\"X\", 1:p)))   y <- X %*% ground_truth$beta + rnorm(n)   data <- list(X = X, y = y)   data } # need to call simulatr_function() to give simulatr a few more pieces of info generate_data_function <- simulatr_function(   f = generate_data_f,                           arg_names = formalArgs(generate_data_f),       loop = TRUE ) # ordinary least squares ols_f <- function(data){   X <- data$X   y <- data$y   lm_fit <- lm(y ~ X - 1)   beta_hat <- coef(lm_fit)   results <- list(beta = unname(beta_hat))   results }  # lasso lasso_f <- function(data){   X <- data$X   y <- data$y   glmnet_fit <- glmnet::cv.glmnet(x = X, y = y, nfolds = 5, intercept = FALSE)   beta_hat <- glmnet::coef.glmnet(glmnet_fit, s = \"lambda.1se\")   results <- list(beta = beta_hat[-1])   results } # create simulatr functions ols_spec_f <- simulatr_function(f = ols_f, arg_names = character(0), loop = TRUE) lasso_spec_f <- simulatr_function(f = lasso_f, arg_names = character(0), loop = TRUE) run_method_functions <- list(ols = ols_spec_f, lasso = lasso_spec_f) rmse <- function(output, ground_truth) {   sqrt(sum((output$beta - ground_truth$beta)^2)) } evaluation_functions <- list(rmse = rmse)"},{"path":"katsevich-lab.github.io/simulatr/articles/example-local.html","id":"create-a-simulatr-specifier-object","dir":"Articles","previous_headings":"","what":"2. Create a simulatr specifier object","title":"simulatr on your laptop","text":"easiest step; just pass four components function simulatr_specifier():","code":"simulatr_spec <- simulatr_specifier(   parameter_grid,   fixed_parameters,   generate_data_function,    run_method_functions,   evaluation_functions )"},{"path":"katsevich-lab.github.io/simulatr/articles/example-local.html","id":"check-and-if-necessary-update-the-simulatr-specifier-object","dir":"Articles","previous_headings":"","what":"3. Check and, if necessary, update the simulatr specifier object","title":"simulatr on your laptop","text":"message tells us simulation encounter errors first two data realizations. free move running full simulation.","code":"check_results <- check_simulatr_specifier_object(simulatr_spec, B_in = 2) #> Generating data... #> Running method 'ols'... #> Running method 'lasso'... #>  #> SUMMARY: The simulatr specifier object is specified correctly!"},{"path":"katsevich-lab.github.io/simulatr/articles/example-local.html","id":"run-the-simulation-on-your-laptop","dir":"Articles","previous_headings":"","what":"4. Run the simulation on your laptop","title":"simulatr on your laptop","text":"Since example simulation small, can run laptop RStudio:","code":"sim_results <- check_simulatr_specifier_object(simulatr_spec) #> Generating data... #> Running method 'ols'... #> Running method 'lasso'... #>  #> SUMMARY: The simulatr specifier object is specified correctly!"},{"path":"katsevich-lab.github.io/simulatr/articles/example-local.html","id":"summarize-andor-visualize-the-results","dir":"Articles","previous_headings":"","what":"5. Summarize and/or visualize the results","title":"simulatr on your laptop","text":"Let’s take look results: mean Monte Carlo standard error metric (RMSE) method problem setting. can plot follows:  looks like lasso performs better small sample sizes OLS performs better large sample sizes.","code":"sim_results$metrics #> # A tibble: 8 × 8 #>   method metric  mean     se     n     p     s beta_val #>   <chr>  <chr>  <dbl>  <dbl> <dbl> <dbl> <dbl>    <dbl> #> 1 lasso  rmse   0.919 0.0711    25    15     5        3 #> 2 ols    rmse   1.24  0.0644    25    15     5        3 #> 3 lasso  rmse   0.593 0.0382    50    15     5        3 #> 4 ols    rmse   0.667 0.0327    50    15     5        3 #> 5 lasso  rmse   0.533 0.0289    75    15     5        3 #> 6 ols    rmse   0.482 0.0243    75    15     5        3 #> 7 lasso  rmse   0.467 0.0239   100    15     5        3 #> 8 ols    rmse   0.392 0.0237   100    15     5        3 sim_results$metrics |>   ggplot(aes(x = n,               y = mean,               ymin = mean - 2*se,               ymax = mean + 2*se,               color = method)) +   geom_point() +    geom_line() +    geom_errorbar(width = 1) +   labs(x = \"Sample size\",        y = \"RMSE\") +    theme(legend.position = \"bottom\")"},{"path":"katsevich-lab.github.io/simulatr/articles/example-remote.html","id":"create-a-working-simulatr-specifier-object","dir":"Articles","previous_headings":"","what":"1-3. Create a working simulatr specifier object","title":"simulatr on a cluster or cloud","text":"simulatr specifier object created laptop can used distributed computing platform! Please read “simulatr laptop” article (linked ) done already. simulatr specifier object happy , save disk using command like following:","code":"saveRDS(object = simulatr_spec, file = simulatr_spec_filename)"},{"path":"katsevich-lab.github.io/simulatr/articles/example-remote.html","id":"run-the-simulation-on-your-distributed-computing-platform","dir":"Articles","previous_headings":"","what":"4. Run the simulation on your distributed computing platform","title":"simulatr on a cluster or cloud","text":"Running simulatr distributed computing platform facilitated Nextflow pipeline, Katsevich-Lab/simulatr-pipeline. pipeline takes inputs simulatr specifier file created steps 1-3, well desired limits memory time usage individual process. adaptively parallelizes simulation tasks accordingly, splitting replicates combination method parameter setting one processes. instructions running pipeline distributed computing platform.","code":""},{"path":"katsevich-lab.github.io/simulatr/articles/example-remote.html","id":"a--install-and-configure-nextflow","dir":"Articles","previous_headings":"4. Run the simulation on your distributed computing platform","what":"A. Install and configure Nextflow","title":"simulatr on a cluster or cloud","text":"Installing Nextflow easy; follow instructions . Next, must configure Nextflow work specific distributed computing platform. get familiar Nextflow configuration, can read tutorial, see list configuration files institutions, read 5 Nextflow tips HPC users 5 Nextflow tips HPC users, finally, consult Nextflow documentation.","code":""},{"path":"katsevich-lab.github.io/simulatr/articles/example-remote.html","id":"b--download-the-simulatr-pipeline","dir":"Articles","previous_headings":"4. Run the simulation on your distributed computing platform","what":"B. Download the simulatr pipeline","title":"simulatr on a cluster or cloud","text":"make sure latest version simulatr pipeline, download using shell command","code":"nextflow pull katsevich-lab/simulatr-pipeline"},{"path":"katsevich-lab.github.io/simulatr/articles/example-remote.html","id":"c--run-the-simulatr-pipeline","dir":"Articles","previous_headings":"4. Run the simulation on your distributed computing platform","what":"C. Run the simulatr pipeline","title":"simulatr on a cluster or cloud","text":"can run simulatr pipeline using command like following: command-line arguments described . Note first (simulatr_specifier_fp) required; rest sensible defaults, included following descriptions. simulatr_specifier_fp: (Required) path simulatr specifier object saved end steps 1-3 . result_dir: (Optional) directory write output file. Defaults current working directory. result_file_name: (Optional) name output file. Defaults \"simulatr_result.rds\". B_check: (Optional) number initial simulation replicates run combination method parameter setting order benchmark memory time required adaptive parallelization. Defaults 5. B: (Optional) number simulation replicates run full simulation. Defaults value simulatr specifier object. may want set B small number initial trial run. max_gb: (Optional) maximum number GB process available. number used adaptive parallelization scheme. Defaults 8. max_hours: (Optional) maximum number hours process can run . number used adaptive parallelization scheme. Defaults 4. Upon successful completion pipeline, results written disk RDS format location requested. results format returned check_simulatr_specifier_object(); see “simulatr laptop”.","code":"nextflow run katsevich-lab/simulatr-pipeline \\   --simulatr_specifier_fp /path/to/simspec/obj \\   --result_dir directory/for/results \\   --result_file_name \"simulatr_result.rds\" \\   --B_check 5 \\   --B 100 \\   --max_gb 8 \\   --max_hours 4"},{"path":"katsevich-lab.github.io/simulatr/articles/example-remote.html","id":"summarize-andor-visualize-the-results","dir":"Articles","previous_headings":"","what":"5. Summarize and/or visualize the results","title":"simulatr on a cluster or cloud","text":"Read results disk using readRDS(). rest “simulatr laptop”.","code":""},{"path":"katsevich-lab.github.io/simulatr/articles/simulatr.html","id":"the-conceptual-structure-of-a-numerical-simulation","dir":"Articles","previous_headings":"","what":"The conceptual structure of a numerical simulation","title":"Introduction to simulatr","text":"goal numerical simulation evaluate performance one statistical methods data generated one data-generating distributions. Problem parameters inferential targets. data-generating distribution indexed number problem parameters, e.g. sample size dimension problem, collectively called problem setting. problem parameters give rise ground truth values inferential targets, e.g. coefficients regression. mapping problem parameters ground truth inferential target values, inferential target generation, may either deterministic randomized. Data generation. problem parameters inferential target values give rise data-generating distribution. , together simulation parameters (e.g. number Monte Carlo realizations B generate) plugged data generation function get data realizations data-generating distribution. Method application. methods functions applied realization data-generating distribution give number method outputs. outputs include values inferential target (e.g. coefficient estimates). Method evaluation. , one evaluation functions take input ground truth inferential target values method outputs compute metric inferential accuracy (e.g. root-mean-squared error). evaluation results method problem setting, averaged B Monte Carlo realizations, final output simulation study.","code":""},{"path":"katsevich-lab.github.io/simulatr/articles/simulatr.html","id":"simulatr-specifier-objects","dir":"Articles","previous_headings":"","what":"simulatr specifier objects","title":"Introduction to simulatr","text":"simulatr, aforementioned components captured simulatr specifier object. object five fields, described : parameter_grid: data frame whose rows correspond problem settings whose columns problem parameters. Additionally, parameter_grid contains special column called ground_truth, contains object ground truth inferential target values problem setting (implemented list-column). fixed_parameters: object whose fields either simulation parameters problem parameters common problem setting. object must contain least fields B, number data realizations generate per problem setting, seed, seed set prior generation data problem setting prior application method. generate_data_function: function takes input problem parameters ground truth inferential target values outputs either (1) one data set (2) B data sets. latter option useful cases data sets faster generate together rather one time. run_method_functions: named list method functions. method function takes input either (1) one data set (2) B data sets. case (1), function outputs object contains fields names corresponding inferential targets. case (2), function outputs data frame two columns: one column named run_id corresponding Monte Carlo replicate one list-column named output containing objects outputted replicate. evaluation_functions: named list evaluation functions. evaluation function takes input two objects: ground truth inferential targets outputs method function. outputs value evaluation metric.","code":""},{"path":"katsevich-lab.github.io/simulatr/articles/simulatr.html","id":"simulatr-workflow","dir":"Articles","previous_headings":"","what":"simulatr workflow","title":"Introduction to simulatr","text":"Assemble simulation components. First, assemble five objects described previous section. Create simulatr specifier object. Given four simulation components, create simulatr specifier object using simulatr_specifier() function: Check , necessary, update simulatr specifier object. Make sure parts simulatr specifier object working running small portion simulation via check_simulatr_specifier_object() function. function takes arguments simulatr specifier object (simulatr_spec) well number data realizations try (B_in). checking purposes, can use small number B_in like 2 3. errors, simulatr give informative error messages let know method parameter setting caused problem, along corresponding data realization. Update simulatr specifier object fix issues. Run simulation. two options running numerical simulation simulatr. can run simulatr either (1) laptop, simulation small (2) distributed computing platform, simulation large. Summarize / visualize results. simulatr output give value evaluation metric method problem setting. can create tables graphs results.","code":"simulatr_spec <- simulatr_specifier(   parameter_grid,   fixed_parameters,   generate_data_function,    run_method_functions,   evaluation_functions ) check_results <- check_simulatr_specifier_object(simulatr_spec, B_in = 3)"},{"path":"katsevich-lab.github.io/simulatr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Timothy Barry. Author, maintainer. Eugene Katsevich. Author, thesis advisor.","code":""},{"path":"katsevich-lab.github.io/simulatr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Barry T, Katsevich E (2023). simulatr: Design Portable Scalable Simulation Studies. R package version 0.0.0.9001.","code":"@Manual{,   title = {simulatr: Design Portable and Scalable Simulation Studies},   author = {Timothy Barry and Eugene Katsevich},   year = {2023},   note = {R package version 0.0.0.9001}, }"},{"path":"katsevich-lab.github.io/simulatr/index.html","id":"simulatr-portable-and-scalable-numerical-simulations","dir":"","previous_headings":"","what":"Design Portable and Scalable Simulation Studies","title":"Design Portable and Scalable Simulation Studies","text":"Simulation studies play crucial role development assessment statistical methods. However, writing portable scalable simulation code challenging. help Nextflow, simulatr decouples specification simulation execution simulation, enabling users develop simulation study laptop seamlessly run simulation -scale distributed computing platform like high-performance computing cluster cloud computing service. Note: package experimental active development. Use caution.","code":""},{"path":"katsevich-lab.github.io/simulatr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Design Portable and Scalable Simulation Studies","text":"can install development version GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"katsevich-lab/simulatr\")"},{"path":"katsevich-lab.github.io/simulatr/index.html","id":"acknowledgment","dir":"","previous_headings":"","what":"Acknowledgment","title":"Design Portable and Scalable Simulation Studies","text":"thank Jacob Bien developing simulator package, served inspiration simulatr. primary difference simulatr specifically designed seamless scaling via distributed computing platforms.","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/add_ground_truth.html","id":null,"dir":"Reference","previous_headings":"","what":"Add ground truth inferential targets to parameter grid — add_ground_truth","title":"Add ground truth inferential targets to parameter grid — add_ground_truth","text":"Add ground truth inferential targets parameter grid","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/add_ground_truth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add ground truth inferential targets to parameter grid — add_ground_truth","text":"","code":"add_ground_truth(parameter_grid, get_ground_truth)"},{"path":"katsevich-lab.github.io/simulatr/reference/add_ground_truth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add ground truth inferential targets to parameter grid — add_ground_truth","text":"parameter_grid parameter grid get_ground_truth function inputs subset parameters outputs object containing ground truth inferential target(s).","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/add_ground_truth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add ground truth inferential targets to parameter grid — add_ground_truth","text":"updated parameter grid","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/check_simulatr_specifier_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Check simulatr specifier object — check_simulatr_specifier_object","title":"Check simulatr specifier object — check_simulatr_specifier_object","text":"Checks simulatr specifier object correctness.","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/check_simulatr_specifier_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check simulatr specifier object — check_simulatr_specifier_object","text":"","code":"check_simulatr_specifier_object(   simulatr_spec,   B_in = NULL,   return_data = FALSE,   parallel = TRUE )"},{"path":"katsevich-lab.github.io/simulatr/reference/check_simulatr_specifier_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check simulatr specifier object — check_simulatr_specifier_object","text":"simulatr_spec simulatr_specifier object B_in (default determined simulatr_spec) number resamples use return_data (default false) whether return data parallel (default true) parallelize execution?","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/check_simulatr_specifier_object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check simulatr specifier object — check_simulatr_specifier_object","text":"errors, list results; errors occur, ordered list arguments passed function error occurred.","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/check_simulatr_specifier_object.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check simulatr specifier object — check_simulatr_specifier_object","text":"","code":"if (FALSE) { simulatr_spec <- readRDS(\"/Users/timbarry/research_offsite/glmeiv/private/simulations/sim_spec_1.rds\") simulatr_spec@parameter_grid  <- simulatr_spec@parameter_grid[1:10,] simulatr_spec@fixed_parameters[[\"n\"]] <- 2000 check <- check_simulatr_specifier_object(simulatr_spec, 5) }"},{"path":"katsevich-lab.github.io/simulatr/reference/collate_result_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Collate result list — collate_result_list","title":"Collate result list — collate_result_list","text":"Collate result list","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/collate_result_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collate result list — collate_result_list","text":"","code":"collate_result_list(result_df, proc_id, row_idx, method)"},{"path":"katsevich-lab.github.io/simulatr/reference/collate_result_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collate result list — collate_result_list","text":"result_df data frame outputted method function proc_id processor id row_idx row parameter grid method string giving method","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/collate_result_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collate result list — collate_result_list","text":"collated data frame","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/compute_bias.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute bias — compute_bias","title":"Compute bias — compute_bias","text":"Computes bias estimator.","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/compute_bias.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute bias — compute_bias","text":"","code":"compute_bias(tbl, key, sim_spec)"},{"path":"katsevich-lab.github.io/simulatr/reference/compute_bias.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute bias — compute_bias","text":"tbl data frame columns target value. Target entry \"estimate.\" key data frame columns parameter grid_row_id sim_spec simulatr specifier object","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/compute_bias.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute bias — compute_bias","text":"1-row tibble columns value, lower_mc_ci, upper_mc_ci","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/compute_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute coverage — compute_coverage","title":"Compute coverage — compute_coverage","text":"Compute coverage","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/compute_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute coverage — compute_coverage","text":"","code":"compute_coverage(tbl, key, sim_spec)"},{"path":"katsevich-lab.github.io/simulatr/reference/compute_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute coverage — compute_coverage","text":"tbl data frame columns target, value, id. Column \"target\" entries \"confint_lower\" \"confint_higher\" key data frame columns parameter grid_row_id sim_spec simulatr specifier object","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/compute_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute coverage — compute_coverage","text":"1-row tibble columns value, lower_mc_ci, upper_mc_ci","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/compute_mse.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute mean squared error — compute_mse","title":"Compute mean squared error — compute_mse","text":"Computes MSE estimator.","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/compute_mse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute mean squared error — compute_mse","text":"","code":"compute_mse(tbl, key, sim_spec)"},{"path":"katsevich-lab.github.io/simulatr/reference/compute_mse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute mean squared error — compute_mse","text":"tbl similar bias key similar bias sim_spec similar bias","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/compute_mse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute mean squared error — compute_mse","text":"similar bias","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/compute_rejection_probability.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes rejection probability — compute_rejection_probability","title":"Computes rejection probability — compute_rejection_probability","text":"Rejection probability type-error (null) type-II error (alternative)","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/compute_rejection_probability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes rejection probability — compute_rejection_probability","text":"","code":"compute_rejection_probability(tbl, threshold)"},{"path":"katsevich-lab.github.io/simulatr/reference/compute_rejection_probability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes rejection probability — compute_rejection_probability","text":"tbl data frame columns target, value, id. Column \"target\" entry \"p_value.\" threshold rejection threshold","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/compute_rejection_probability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes rejection probability — compute_rejection_probability","text":"1-row tibble columns value, lower_mc_ci, upper_mc_ci","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/compute_se.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute se — compute_se","title":"Compute se — compute_se","text":"Compute se","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/compute_se.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute se — compute_se","text":"","code":"compute_se(tbl)"},{"path":"katsevich-lab.github.io/simulatr/reference/compute_se.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute se — compute_se","text":"tbl similar bias","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/compute_se.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute se — compute_se","text":"similar bias","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/create_param_grid_fractional_factorial.html","id":null,"dir":"Reference","previous_headings":"","what":"Create param grid — create_param_grid_fractional_factorial","title":"Create param grid — create_param_grid_fractional_factorial","text":"Creates parameter grid. variable, varies value variable holding variables constant specified value.","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/create_param_grid_fractional_factorial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create param grid — create_param_grid_fractional_factorial","text":"","code":"create_param_grid_fractional_factorial(varying_values, baseline_values)"},{"path":"katsevich-lab.github.io/simulatr/reference/create_param_grid_fractional_factorial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create param grid — create_param_grid_fractional_factorial","text":"varying_values named list giving values vary variables baseline_values baseline values variables; variables take value varying","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/create_param_grid_fractional_factorial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create param grid — create_param_grid_fractional_factorial","text":"parameter grid","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/create_param_grid_fractional_factorial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create param grid — create_param_grid_fractional_factorial","text":"","code":"varying_values <- list(x = seq(-2,2,0.1), y = seq(0,2,0.1), z = c(\"cond1\", \"cond2\")) baseline_values <- list(x = 0, y = 0.5, z = \"cond1\") param_df <- create_param_grid_fractional_factorial(varying_values, baseline_values)"},{"path":"katsevich-lab.github.io/simulatr/reference/create_param_grid_two_way_factorial.html","id":null,"dir":"Reference","previous_headings":"","what":"Create param grid (two way factorial) — create_param_grid_two_way_factorial","title":"Create param grid (two way factorial) — create_param_grid_two_way_factorial","text":"Create param grid (two way factorial)","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/create_param_grid_two_way_factorial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create param grid (two way factorial) — create_param_grid_two_way_factorial","text":"","code":"create_param_grid_two_way_factorial(param_vals, arm_names, arm_param)"},{"path":"katsevich-lab.github.io/simulatr/reference/create_param_grid_two_way_factorial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create param grid (two way factorial) — create_param_grid_two_way_factorial","text":"param_vals named list length two, giving values vary arm_names names arms arm_param parameter use assign arm names","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/create_param_grid_two_way_factorial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create param grid (two way factorial) — create_param_grid_two_way_factorial","text":"parameter grid","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/create_param_grid_two_way_factorial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create param grid (two way factorial) — create_param_grid_two_way_factorial","text":"","code":"param_vals <- list(g_perturbation = seq(0.5, 6, 0.5), pi = seq(0.1, 0.3, 0.1)) arm_names <- c(\"pi_small\", \"pi_intermediate\", \"pi_big\") arm_param <- \"pi\" create_param_grid_two_way_factorial(param_vals, arm_names, arm_param) #>    g_perturbation  pi arm_pi_big arm_pi_intermediate arm_pi_small grid_id #> 1             0.5 0.1      FALSE               FALSE         TRUE       1 #> 2             1.0 0.1      FALSE               FALSE         TRUE       2 #> 3             1.5 0.1      FALSE               FALSE         TRUE       3 #> 4             2.0 0.1      FALSE               FALSE         TRUE       4 #> 5             2.5 0.1      FALSE               FALSE         TRUE       5 #> 6             3.0 0.1      FALSE               FALSE         TRUE       6 #> 7             3.5 0.1      FALSE               FALSE         TRUE       7 #> 8             4.0 0.1      FALSE               FALSE         TRUE       8 #> 9             4.5 0.1      FALSE               FALSE         TRUE       9 #> 10            5.0 0.1      FALSE               FALSE         TRUE      10 #> 11            5.5 0.1      FALSE               FALSE         TRUE      11 #> 12            6.0 0.1      FALSE               FALSE         TRUE      12 #> 13            0.5 0.2      FALSE                TRUE        FALSE      13 #> 14            1.0 0.2      FALSE                TRUE        FALSE      14 #> 15            1.5 0.2      FALSE                TRUE        FALSE      15 #> 16            2.0 0.2      FALSE                TRUE        FALSE      16 #> 17            2.5 0.2      FALSE                TRUE        FALSE      17 #> 18            3.0 0.2      FALSE                TRUE        FALSE      18 #> 19            3.5 0.2      FALSE                TRUE        FALSE      19 #> 20            4.0 0.2      FALSE                TRUE        FALSE      20 #> 21            4.5 0.2      FALSE                TRUE        FALSE      21 #> 22            5.0 0.2      FALSE                TRUE        FALSE      22 #> 23            5.5 0.2      FALSE                TRUE        FALSE      23 #> 24            6.0 0.2      FALSE                TRUE        FALSE      24 #> 25            0.5 0.3       TRUE               FALSE        FALSE      25 #> 26            1.0 0.3       TRUE               FALSE        FALSE      26 #> 27            1.5 0.3       TRUE               FALSE        FALSE      27 #> 28            2.0 0.3       TRUE               FALSE        FALSE      28 #> 29            2.5 0.3       TRUE               FALSE        FALSE      29 #> 30            3.0 0.3       TRUE               FALSE        FALSE      30 #> 31            3.5 0.3       TRUE               FALSE        FALSE      31 #> 32            4.0 0.3       TRUE               FALSE        FALSE      32 #> 33            4.5 0.3       TRUE               FALSE        FALSE      33 #> 34            5.0 0.3       TRUE               FALSE        FALSE      34 #> 35            5.5 0.3       TRUE               FALSE        FALSE      35 #> 36            6.0 0.3       TRUE               FALSE        FALSE      36"},{"path":"katsevich-lab.github.io/simulatr/reference/fdp.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate the FDP of a discovery set — fdp","title":"Evaluate the FDP of a discovery set — fdp","text":"Evaluate FDP discovery set","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/fdp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate the FDP of a discovery set — fdp","text":"","code":"fdp(output, ground_truth)"},{"path":"katsevich-lab.github.io/simulatr/reference/fdp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate the FDP of a discovery set — fdp","text":"output output method, object must contain field nonnulls ground_truth ground truth, object must contain field nonnulls","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/fdp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate the FDP of a discovery set — fdp","text":"FDP","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/get_example_simulatr_specifier.html","id":null,"dir":"Reference","previous_headings":"","what":"get example simulatr_specifier — get_example_simulatr_specifier","title":"get example simulatr_specifier — get_example_simulatr_specifier","text":"get example simulatr_specifier","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/get_example_simulatr_specifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get example simulatr_specifier — get_example_simulatr_specifier","text":"","code":"get_example_simulatr_specifier()"},{"path":"katsevich-lab.github.io/simulatr/reference/get_example_simulatr_specifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get example simulatr_specifier — get_example_simulatr_specifier","text":"example simulatr specifier object","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/get_memory_used.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute memory used since last call to gc(reset = TRUE) — get_memory_used","title":"Compute memory used since last call to gc(reset = TRUE) — get_memory_used","text":"Compute memory used since last call gc(reset = TRUE)","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/get_memory_used.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute memory used since last call to gc(reset = TRUE) — get_memory_used","text":"","code":"get_memory_used()"},{"path":"katsevich-lab.github.io/simulatr/reference/get_memory_used.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute memory used since last call to gc(reset = TRUE) — get_memory_used","text":"Number bytes used","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/get_ordered_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Get ordered arguments for function object — get_ordered_args","title":"Get ordered arguments for function object — get_ordered_args","text":"Get ordered arguments function object","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/get_ordered_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get ordered arguments for function object — get_ordered_args","text":"","code":"get_ordered_args(function_object, simulatr_spec, row_idx)"},{"path":"katsevich-lab.github.io/simulatr/reference/get_ordered_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get ordered arguments for function object — get_ordered_args","text":"function_object function object simulatr_spec Simulatr specifier object row_idx row parameter grid get parameter values","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/get_ordered_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get ordered arguments for function object — get_ordered_args","text":"List ordered arguments","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/get_param_from_simulatr_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Get parameter from simulatr_specifier object — get_param_from_simulatr_spec","title":"Get parameter from simulatr_specifier object — get_param_from_simulatr_spec","text":"Returns requested parameter simulatr_specifier object.","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/get_param_from_simulatr_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get parameter from simulatr_specifier object — get_param_from_simulatr_spec","text":"","code":"get_param_from_simulatr_spec(simulatr_spec, row_idx, param)"},{"path":"katsevich-lab.github.io/simulatr/reference/get_param_from_simulatr_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get parameter from simulatr_specifier object — get_param_from_simulatr_spec","text":"simulatr_spec simulatr_specifier object row_idx index giving row parameter grid; NULL, returns values (parameter stored grid) fixed value (parameter stored fixed params list) param name parameter","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/get_param_from_simulatr_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get parameter from simulatr_specifier object — get_param_from_simulatr_spec","text":"value requested parameter","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/get_param_from_simulatr_spec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get parameter from simulatr_specifier object — get_param_from_simulatr_spec","text":"parameter present parameter grid fixed parameter list, returns value parameter grid. parameter present either, throws error.","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/get_params_for_nextflow.html","id":null,"dir":"Reference","previous_headings":"","what":"Get params for nextflow — get_params_for_nextflow","title":"Get params for nextflow — get_params_for_nextflow","text":"Given file path fp, writes parameters nextflow needs access plain text file stored fp.","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/get_params_for_nextflow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get params for nextflow — get_params_for_nextflow","text":"","code":"get_params_for_nextflow(simulatr_spec, fp, B_in)"},{"path":"katsevich-lab.github.io/simulatr/reference/get_params_for_nextflow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get params for nextflow — get_params_for_nextflow","text":"simulatr_spec simulatr_specification object fp file path B_in value B passed command line; B = 0 indicates argument passed","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/get_params_for_nextflow.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get params for nextflow — get_params_for_nextflow","text":"Parameters separated line. line form \"param:value,\" \"param\" name parameter \"value\" value.","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/power.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate the power of a discovery set — power","title":"Evaluate the power of a discovery set — power","text":"Evaluate power discovery set","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/power.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate the power of a discovery set — power","text":"","code":"power(output, ground_truth)"},{"path":"katsevich-lab.github.io/simulatr/reference/power.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate the power of a discovery set — power","text":"output output method, object must contain field nonnulls ground_truth ground truth, object must contain field nonnulls","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/power.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate the power of a discovery set — power","text":"power","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/setup_script.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup script — setup_script","title":"Setup script — setup_script","text":"Runs setup either generate_data.R script run_methods.R script. script ) sets seed (global side-effect) ii) updates value B, B !=0 (default) iii) obtains ordered set arguments","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/setup_script.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup script — setup_script","text":"","code":"setup_script(simulatr_spec, B_in, function_object, row_idx)"},{"path":"katsevich-lab.github.io/simulatr/reference/setup_script.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup script — setup_script","text":"simulatr_spec simulation specifier object B_in B set (0 means update) function_object either method data generation simulatr_function object row_idx row index parameter grid","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/setup_script.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup script — setup_script","text":"list B-updated sim_spec object ordered list args","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/simulatr.html","id":null,"dir":"Reference","previous_headings":"","what":"simulatr: A package that powers portable and scalable simulation studies — simulatr","title":"simulatr: A package that powers portable and scalable simulation studies — simulatr","text":"Simulation studies play crucial role development assessment statistical methods. However, writing portable scalable simulation code can challenging. Simulatr decouples specification simulation execution simulation, enabling users develop simulation study laptop seamlessly run simulation -scale distributed computing platform. Supported platforms include high-performance computing clusters cloud computing services (e.g., Microsoft Azure, Amazon Web Services, etc.).","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/simulatr_function.html","id":null,"dir":"Reference","previous_headings":"","what":"simulatr_function — simulatr_function","title":"simulatr_function — simulatr_function","text":"simulator_function class stores method data generation function alongside associated metadata.","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/simulatr_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"simulatr_function — simulatr_function","text":"","code":"simulatr_function(   f,   arg_names = NA_character_,   packages = NA_character_,   loop = FALSE,   one_rep_time = NA_real_,   mult_time_factor = 2,   add_time_factor = 60 )"},{"path":"katsevich-lab.github.io/simulatr/reference/simulatr_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"simulatr_function — simulatr_function","text":"f function one arguments. arg_names (ordered) names parameters (parameter grid list fixed parameters) pass f. packages packages load calling f, stored character vector. loop boolean indicating whether f called within loop. one_rep_time amount time takes function exeecute setting B = 1 (optional) mult_time_factor time requested given function (one_rep_time)(B)(mult_time_factor)/n_processors + add_time_factor add_time_factor see ","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/simulatr_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"simulatr_function — simulatr_function","text":"simulatr_function object","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/simulatr_specifier.html","id":null,"dir":"Reference","previous_headings":"","what":"simulatr_specifier — simulatr_specifier","title":"simulatr_specifier — simulatr_specifier","text":"simulatr_specifier object defines simulation study simulatr framework.","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/simulatr_specifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"simulatr_specifier — simulatr_specifier","text":"","code":"simulatr_specifier(   parameter_grid,   fixed_parameters,   generate_data_function,   run_method_functions,   evaluation_functions = list() )"},{"path":"katsevich-lab.github.io/simulatr/reference/simulatr_specifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"simulatr_specifier — simulatr_specifier","text":"parameter_grid named data frame storing values study parameters vary fixed_parameters named list storing values parameters stay fixed across parameter settings generate_data_function simulatr_function generates data run_method_functions named list simulatr_functions define methods run simulation evaluation_functions named list functions define metrics used evaluate method","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/simulatr_specifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"simulatr_specifier — simulatr_specifier","text":"simulatr_specifier object","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/summarize_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize results — summarize_results","title":"Summarize results — summarize_results","text":"Summarizes results simulatr simulation.","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/summarize_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize results — summarize_results","text":"","code":"summarize_results(sim_spec, sim_res, metrics, parameters, threshold = 0.05)"},{"path":"katsevich-lab.github.io/simulatr/reference/summarize_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize results — summarize_results","text":"sim_spec simulatr_specifier object sim_res data frame raw results, outputted simulatr metrics character vector metrics compute; options include \"coverage,\" \"bias,\" \"se\" (standard deviation estimator), \"mse\", \"rejection_probability,\" \"count,\" \"time.\" parameters character vector parameters compute metrics threshold (optional; default value 0.05) rejection threshold use \"rejection_probability\" metric.","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/summarize_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize results — summarize_results","text":"data frame summarized results","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/update_B_sim_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Update B in a simulatr_specifier object — update_B_sim_spec","title":"Update B in a simulatr_specifier object — update_B_sim_spec","text":"Takes simulatr_specifier object value B; updates B return new object.","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/update_B_sim_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update B in a simulatr_specifier object — update_B_sim_spec","text":"","code":"update_B_sim_spec(simulatr_spec, B)"},{"path":"katsevich-lab.github.io/simulatr/reference/update_B_sim_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update B in a simulatr_specifier object — update_B_sim_spec","text":"simulatr_spec simulatr specifier object B new value B","code":""},{"path":"katsevich-lab.github.io/simulatr/reference/update_B_sim_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update B in a simulatr_specifier object — update_B_sim_spec","text":"updated simulatr_specifier object","code":""},{"path":"katsevich-lab.github.io/simulatr/news/index.html","id":"simulatr-0009001","dir":"Changelog","previous_headings":"","what":"simulatr 0.0.0.9001","title":"simulatr 0.0.0.9001","text":"Added vignettes “simulatr laptop” “simulatr cluster cloud.” Added functionality evaluate performance metrics method.","code":""}]
